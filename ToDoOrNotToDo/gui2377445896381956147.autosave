/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */
//<<<<<<< Updated upstream

public void addTasks_change1(GTextField source, GEvent event) { //_CODE_:addTasks:555906:
  println("addTasks - GTextField >> GEvent." + event + " @ " + millis());
} //_CODE_:addTasks:555906:

float currtime;
public void custom_slider1_change1(GCustomSlider source, GEvent event) { //_CODE_:custom_slider1:406579:
  println("custom_slider1 - GCustomSlider >> GEvent." + event + " @ " + millis());
} //_CODE_:custom_slider1:406579:

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:Clock:788938:
  appc.background(230);
} //_CODE_:Clock:788938:

public void knob1_turn1(GKnob source, GEvent event) { //_CODE_:VisualTimer:421089:
//  println("Timer - GKnob >> GEvent." + event + " @ " + millis());
currtime = VisualTimer.getValueF();
println(currtime);
//println("speed_slider - GCustomSlider >> GEvent." + event + " @ " + millis());
  //speed = speed_slider.getValueF();  
} //_CODE_:VisualTimer:421089:

public void timer1_Action1(GTimer source) { //_CODE_:timer1:527622:
  println("timer1 - GTimer >> an event occured @ " + millis());
} //_CODE_:timer1:527622:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  addTasks = new GTextField(this, 200, 400, 400, 30, G4P.SCROLLBARS_NONE);
  addTasks.setPromptText("Enter a task...");
  addTasks.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  addTasks.setOpaque(false);
  addTasks.addEventHandler(this, "addTasks_change1");

  custom_slider1 = new GCustomSlider(this, 170, 153, 100, 40, "grey_blue");
  custom_slider1.setLimits(0.5, 0.0, 1.0);
  custom_slider1.setNumberFormat(G4P.DECIMAL, 2);
  custom_slider1.setOpaque(false);
  custom_slider1.addEventHandler(this, "custom_slider1_change1");
  Clock = GWindow.getWindow(this, "Window title", 0, 0, 400, 300, JAVA2D);
  Clock.noLoop();
  Clock.setActionOnClose(G4P.KEEP_OPEN);
  Clock.addDrawHandler(this, "win_draw1");
  VisualTimer = new GKnob(Clock, 170, 120, 100, 100, 0.8);
  VisualTimer.setTurnRange(270, 270);
  VisualTimer.setTurnMode(GKnob.CTRL_HORIZONTAL);
  VisualTimer.setSensitivity(1);
  VisualTimer.setShowArcOnly(false);
  VisualTimer.setOverArcOnly(false);
  VisualTimer.setIncludeOverBezel(false);
  VisualTimer.setShowTrack(true);
  VisualTimer.setLimits(0.0, 0.0, 60.0);
  VisualTimer.setNbrTicks(60);
  VisualTimer.setStickToTicks(true);
  VisualTimer.setShowTicks(true);
  VisualTimer.setOpaque(false);
  VisualTimer.addEventHandler(this, "knob1_turn1");
  timer1 = new GTimer(this, this, "timer1_Action1", 1000);
  Clock.loop();
}

// Variable declarations 
// autogenerated do not edit
GTextField addTasks; 
GCustomSlider custom_slider1; 
GWindow Clock;
GKnob VisualTimer; 
GTimer timer1; 
